package com.prs.web;

import java.util.List;
import java.util.Optional;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.prs.business.product.Product;
import com.prs.business.product.ProductRepository;
import com.prs.util.PRSMaintenanceReturn;


@Controller    
@RequestMapping(path="/Products") 
public class ProductController extends BaseController {
	@Autowired // This means to get the bean called userRepository
	// Which is auto-generated by Spring, we will use it to handle the data
	private ProductRepository productRepository;


	@GetMapping(path="/List") //instead of all, we use list 
	public @ResponseBody Iterable<Product> getAllProducts() {
		// This returns a JSON or XML with the users
		try  {
			return productRepository.findAll();
		}
		catch (Exception e) {
			e.printStackTrace();
		}
		return null;
	}

	@GetMapping(path="/Get")
	public @ResponseBody List<Product> getProduct (@RequestParam int id) {

		Optional<Product> p =productRepository.findById(id);
		return getReturnArray(p.get());
		
//		if (p.isPresent())
//			return p.get();
//		else
//			return null;
	}

	@PostMapping(path="/Add") // Map ONLY GET Requests
	public @ResponseBody PRSMaintenanceReturn addNewProduct (@RequestBody Product product) {
		try {
			productRepository.save(product);
			System.out.println("Product saved:  "+product);
		}
		catch (Exception e) {
			product = null;
		}
		return PRSMaintenanceReturn.getMaintReturn(product);
	}
	@PostMapping(path="/Change")
	public @ResponseBody PRSMaintenanceReturn updateProduct (@RequestBody Product product) {

		try {
			productRepository.save(product);
			System.out.println("Product updated:  "+product);
		}
		catch (Exception e) {
			product = null;
		}

		return PRSMaintenanceReturn.getMaintReturn(product);
	}

	@GetMapping(path="/Remove")
	public @ResponseBody PRSMaintenanceReturn deleteProduct (@RequestParam int id) {

		Optional<Product> product = productRepository.findById(id);
		try {
			Product p = product.get();
			productRepository.delete(p);
			System.out.println("Product deleted:  "+p);
		}
		catch (Exception e) {
			product = null;
		}
		return PRSMaintenanceReturn.getMaintReturn(product);
	}	
}